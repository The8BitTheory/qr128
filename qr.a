
!to "qr.bin.prg",cbm

k_indfet  = $ff74
k_indsta  = $ff77
k_primm   = $ff7d


z_location  = $fa     ;$fa-$fb for storing indexed addresses
z_location2 = $fc     ;$fc-$fd for storing indexed addresses
z_temp      = $fe
z_counter1  = $0a     ;ENDCHR
z_counter2  = $0c     ;VERCK

*= $1300

    jmp init
    jmp p2a
    jmp bytes_to_stream
    jmp rs
;    jmp stream_to_module
    rts
    
size            !byte 0   ;size of one axis-length of the final matrix
contentLength   !byte 0
eccLength       !byte 0   ;nr of ecc bytes to generate
streamLength    !byte 0
matrixSize      !byte 0,0 ;size of the matrix in modules (1 byte per module)
rsDivisorOffset !byte 0
;counter1        !byte 0
;counter2        !byte 0

!source "init.a"
!source "p2a.a"             ; reads petscii bytes from z_location and writes ascii to z_location2
!source "bytes2stream.a"    ; reads ascii from z_location2 and writes into datastream at z_location (=data+matrix_size)
                            ; z_counter1 holds the right offset for rs.a to continue using it.
!source "rs.a"              ; reads content bytes from datastream (z_location) and writes ecc bytes to z_location2(=z_location + z_counter1)
;!source "stream2module.a"
;!source "masks.a"

data    !byte 0